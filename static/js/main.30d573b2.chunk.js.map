{"version":3,"sources":["Components/Form.js","Components/Todo.js","Components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setInputText","todos","setTodos","inputText","setStatus","value","onChange","text","target","type","className","onClick","e","preventDefault","completed","id","Math","random","name","Todo","todo","map","item","filter","el","TodoList","filteredTodos","App","useState","status","setFilteredTodos","useEffect","filterHandler","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.30d573b2.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Form({ setInputText, todos, setTodos, inputText, setStatus }) {\r\n\r\n    const inputTextHandler = (text) => {\r\n        //console.log(text.target.value)\r\n        setInputText(text.target.value)\r\n    }\r\n    const submitTodoHandler = (e) => {\r\n        e.preventDefault()\r\n        setTodos([\r\n            ...todos, \r\n            { text : inputText, completed: false, id: Math.random()*1000 }\r\n        ]);\r\n        setInputText(\"\");\r\n    }\r\n\r\n    const statusHandler = (e) => {\r\n        setStatus(e.target.value)\r\n    }\r\n    return (\r\n        <form>\r\n        <input value={inputText} onChange={inputTextHandler} type=\"text\" className=\"todo-input glow\" />\r\n        \r\n        <button onClick={submitTodoHandler}  className=\"todo-button glow\" type=\"submit\">\r\n          <i className=\"fas fa-plus-square\"></i>\r\n        </button>\r\n        <div className=\"select \">\r\n          <select onChange={statusHandler} name=\"todos\" className=\"filter-todo glow\">\r\n\r\n            <option value=\"all\">All</option>\r\n            <option value=\"completed\">Completed</option>\r\n            <option value=\"uncompleted\">Uncompleted</option>\r\n          </select>\r\n        </div>\r\n      </form>\r\n    )\r\n}\r\n\r\nexport default Form\r\n","import React from 'react'\r\n\r\nexport default function Todo({ setTodos, todos, todo, text }) {\r\n\r\n    //Events\r\n    const deleteHandler = () => {\r\n        setTodos(todos.filter(el => el.id !== todo.id))\r\n    }\r\n\r\n    const completeHandler = () => {\r\n        setTodos(todos.map((item) => {\r\n            if (item.id === todo.id) {\r\n                return {\r\n                    ...item, completed: !item.completed\r\n                };\r\n            }\r\n            return item;\r\n        }\r\n        ));\r\n    }\r\n    return (\r\n        \r\n        <div className=\"todo glow\">\r\n            <li className={`todo-item ${todo.completed ? 'completed' : ''}`}>{text}</li>\r\n            \r\n            <button onClick={completeHandler} className=\"complete-btn\">\r\n                <i className=\"fas fa-check\"></i>\r\n            </button>\r\n            <button onClick={deleteHandler} className=\"trash-btn\">\r\n                <i className=\"fas fa-trash\"></i>\r\n            </button>\r\n            <span></span>\r\n        </div>\r\n    \r\n    )\r\n}\r\n","import React from 'react'\r\nimport Todo from './Todo'\r\n\r\n\r\nexport default function TodoList({ todos, setTodos, filteredTodos }) {\r\n    return (\r\n        <div className=\"todo-container\">\r\n            <ul className=\"todo-list\">\r\n                {filteredTodos.map(todo => (\r\n                    <Todo\r\n                        setTodos={setTodos}\r\n                        todos={todos}\r\n                        todo={todo}\r\n                        text={todo.text}\r\n                        key={todo.id} \r\n                    />\r\n\r\n                ))}\r\n\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\nimport './AppCss.css';\nimport Form from './Components/Form';\nimport TodoList from './Components/TodoList';\n\nfunction App() {\n\n  // States and useStates\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState('all');\n  const [filteredTodos, setFilteredTodos] = useState([]);\n  \n  //Use effect\n  useEffect(() => {\n    filterHandler();\n  }, [todos, status]);\n  \n  //functions\n  const filterHandler = () => {\n    \n    switch (status) {\n      case 'completed':\n        setFilteredTodos(todos.filter((todo) => todo.completed === true));\n        break;\n        case \"uncompleted\":\n          setFilteredTodos(todos.filter((todo) => todo.completed === false));\n          break;\n          default:\n            setFilteredTodos(todos);\n            break;\n          }\n        }\n        \n        return (\n          \n          <div className=\"App\">\n\n      <header>\n        <div className=\"glow block\">\n        <h1 >Shashwat's Todo List </h1>\n        </div>\n      </header>\n\n      <Form\n        setInputText={setInputText}\n        todos={todos} \n        setTodos={setTodos}\n        inputText={inputText}\n        setStatus={setStatus}\n         />\n\n      <TodoList todos={todos} setTodos={setTodos} filteredTodos={filteredTodos} />\n\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}